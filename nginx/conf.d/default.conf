server {
    listen 80;
    server_name localhost;
    
    # アクセスログ
    access_log /var/log/nginx/accent-vote.access.log main;
    error_log /var/log/nginx/accent-vote.error.log warn;

    # セキュリティ: サーバー情報を隠す
    server_tokens off;

    # リクエストサイズ制限
    client_max_body_size 10M;
    client_body_buffer_size 128k;

    # タイムアウト設定
    proxy_connect_timeout 90;
    proxy_send_timeout 90;
    proxy_read_timeout 90;

    # ルートディレクトリ
    root /usr/share/nginx/html;
    index index.html index.htm;

    # Next.jsアプリケーションへのプロキシ
    location / {
        proxy_pass http://nextjs_app;
        proxy_http_version 1.1;
        
        # ヘッダー設定
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $server_name;
        
        # キャッシュ無効化（開発環境）
        proxy_cache_bypass $http_upgrade;
        
        # バッファリング設定
        proxy_buffering off;
        proxy_request_buffering off;
        
        # レート制限
        limit_req zone=general burst=20 nodelay;
        limit_conn addr 10;
    }

    # API エンドポイント
    location /api/ {
        proxy_pass http://nextjs_app;
        proxy_http_version 1.1;
        
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # APIレート制限
        limit_req zone=api burst=50 nodelay;
        limit_conn addr 20;
        
        # CORS設定（必要に応じて）
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
        add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;
        
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain; charset=utf-8';
            add_header 'Content-Length' 0;
            return 204;
        }
    }

    # 投票APIの特別なレート制限
    location /api/votes {
        proxy_pass http://nextjs_app;
        proxy_http_version 1.1;
        
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # 投票レート制限（厳格）
        limit_req zone=vote burst=2 nodelay;
        limit_conn addr 5;
    }

    # 静的ファイル（Next.js build output）
    location /_next/static {
        proxy_pass http://nextjs_app;
        proxy_http_version 1.1;
        
        # 静的ファイルのキャッシュ設定
        proxy_cache_valid 200 302 60m;
        proxy_cache_valid 404 1m;
        add_header Cache-Control "public, max-age=31536000, immutable";
        
        # Gzip圧縮
        gzip_static on;
    }

    # 画像ファイル
    location ~* \.(jpg|jpeg|png|gif|ico|svg|webp)$ {
        proxy_pass http://nextjs_app;
        proxy_http_version 1.1;
        
        # 画像キャッシュ設定
        expires 30d;
        add_header Cache-Control "public, max-age=2592000, immutable";
        access_log off;
    }

    # WebSocket サポート (Next.js HMR用)
    location /_next/webpack-hmr {
        proxy_pass http://nextjs_app;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # ヘルスチェック
    location /health {
        access_log off;
        add_header 'Content-Type' 'application/json';
        return 200 '{"status":"healthy"}';
    }

    # robots.txt
    location = /robots.txt {
        add_header Content-Type text/plain;
        return 200 "User-agent: *\nAllow: /\n";
    }

    # favicon
    location = /favicon.ico {
        log_not_found off;
        access_log off;
    }

    # セキュリティ: 隠しファイルへのアクセスを拒否
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }

    # エラーページ
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        root /usr/share/nginx/html;
    }
}