import app from './app';
import { config } from './config/env';
import { PrismaClient } from '@prisma/client';

const prisma = new PrismaClient();

async function startServer() {
  try {
    // „Éá„Éº„Çø„Éô„Éº„ÇπÊé•Á∂öÁ¢∫Ë™ç
    await prisma.$connect();
    console.log('‚úÖ Database connected successfully');

    // „Çµ„Éº„Éê„ÉºËµ∑Âãï
    const server = app.listen(config.port, () => {
      console.log(`üöÄ Server is running on port ${config.port}`);
      console.log(`üìù Environment: ${config.nodeEnv}`);
      console.log(`üåê Health check: http://localhost:${config.port}/health`);
    });

    // „Ç∞„É¨„Éº„Çπ„Éï„É´„Ç∑„É£„ÉÉ„Éà„ÉÄ„Ç¶„É≥
    const gracefulShutdown = async (signal: string) => {
      console.log(`\n${signal} received. Starting graceful shutdown...`);

      server.close(() => {
        console.log('HTTP server closed');
      });

      await prisma.$disconnect();
      console.log('Database connection closed');

      process.exit(0);
    };

    process.on('SIGTERM', () => gracefulShutdown('SIGTERM'));
    process.on('SIGINT', () => gracefulShutdown('SIGINT'));

  } catch (error) {
    console.error('‚ùå Failed to start server:', error);
    await prisma.$disconnect();
    process.exit(1);
  }
}

startServer();