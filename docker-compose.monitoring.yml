version: '3.8'

# 監視・ログ収集用のDocker Compose設定
# 使用方法: docker-compose -f docker-compose.yml -f docker-compose.monitoring.yml up -d

services:
  # Prometheus (メトリクス収集)
  prometheus:
    image: prom/prometheus:latest
    container_name: accent_vote_prometheus
    restart: unless-stopped
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    ports:
      - "9090:9090"
    networks:
      - accent_network

  # Grafana (可視化)
  grafana:
    image: grafana/grafana:latest
    container_name: accent_vote_grafana
    restart: unless-stopped
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin}
      - GF_INSTALL_PLUGINS=redis-datasource
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources
    ports:
      - "3001:3000"
    networks:
      - accent_network
    depends_on:
      - prometheus

  # PostgreSQL Exporter (DB メトリクス)
  postgres-exporter:
    image: prometheuscommunity/postgres-exporter:latest
    container_name: accent_vote_postgres_exporter
    restart: unless-stopped
    environment:
      DATA_SOURCE_NAME: postgresql://${DB_USER:-accent_user}:${DB_PASSWORD:-accent_password}@postgres:5432/${DB_NAME:-accent_vote_db}?sslmode=disable
    ports:
      - "9187:9187"
    networks:
      - accent_network
    depends_on:
      - postgres

  # Redis Exporter (Redis メトリクス)
  redis-exporter:
    image: oliver006/redis_exporter:latest
    container_name: accent_vote_redis_exporter
    restart: unless-stopped
    environment:
      REDIS_ADDR: redis://redis:6379
    ports:
      - "9121:9121"
    networks:
      - accent_network
    depends_on:
      - redis

  # Node Exporter (ホストメトリクス)
  node-exporter:
    image: prom/node-exporter:latest
    container_name: accent_vote_node_exporter
    restart: unless-stopped
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    ports:
      - "9100:9100"
    networks:
      - accent_network

  # Loki (ログ収集)
  loki:
    image: grafana/loki:latest
    container_name: accent_vote_loki
    restart: unless-stopped
    ports:
      - "3100:3100"
    volumes:
      - ./monitoring/loki-config.yml:/etc/loki/local-config.yaml
      - loki_data:/loki
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - accent_network

  # Promtail (ログ転送)
  promtail:
    image: grafana/promtail:latest
    container_name: accent_vote_promtail
    restart: unless-stopped
    volumes:
      - /var/log:/var/log
      - ./logs:/app/logs
      - ./nginx/logs:/nginx/logs
      - ./monitoring/promtail-config.yml:/etc/promtail/config.yml
    command: -config.file=/etc/promtail/config.yml
    networks:
      - accent_network
    depends_on:
      - loki

volumes:
  prometheus_data:
  grafana_data:
  loki_data: